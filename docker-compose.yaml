services:
  postgres:
    image: postgres:12.21
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: rates_service
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
  
  rates_service:
    build:
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rates_service
      DB_USER: admin
      DB_PASSWORD: admin
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      KAFKA_CLIENT_ID: rates_service_producer
      KAFKA_LOG_TOPIC: rates_service.logs
    restart: always
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      rates_service_migration:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  rates_service_migration:
    build:
      dockerfile: Dockerfile
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rates_service
      DB_USER: admin
      DB_PASSWORD: admin
    command: bash -c "alembic revision --autogenerate && alembic upgrade head"
    depends_on:
      postgres:
          condition: service_started

  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_RETENTION_BYTES: 21474836480
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - kafkadata:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - "9093:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      LOGGING_LEVEL_COM_PROVECTUS: info
      FILTERING_GROOVY_ENABLED: 'true'
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      kafka:
        condition: service_started
    restart: always


volumes:
  pgdata:
    driver: local
  kafkadata:
    driver: local